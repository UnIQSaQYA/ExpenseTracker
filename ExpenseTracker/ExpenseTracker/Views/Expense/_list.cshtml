@using PagedList.Mvc;
@model PagedList.IPagedList<ExpenseTracker.Model.Expense>

@if (Model != null && Model.Count > 0)
{
    <table class="table table-hover table-striped">
        <tr class="info">
            <td>Item</td>
            <td>Category</td>
            <td>Amount</td>
            <td>Date</td>
            <td>Action</td>
        </tr>
        @foreach (var expense in Model)
        {
            <tr>
                <td>
                    @expense.Item
                </td>
                <td>@expense.CategoryName</td>
                <td>@expense.Amount</td>
                <td>@expense.Date.ToString("MMM yyyy dd")</td>
                <td>
                    <a href="@Url.Action("Edit", "Expense", new { @id = expense.Id })" class="btn btn-primary btn-xs">Edit</a>
                    <a href="@Url.Action("DeleteConfirmation", "Expense", new { @id = expense.Id })" class="btn btn-danger btn-xs" data-toggle="modal" data-target="#myModal">Delete</a>
                </td>
            </tr>
        }
    </table>
    <div class="row">
        <div class="col-md-12 paginate">
            <div class="float-left m-t-10">
                Showing @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            </div>
            <div class="float-right">
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
            </div>
        </div>
    </div>
}
else
{
    <div class="field-error">
        <div class="field-content">
            No data found.
        </div>
    </div>
}